{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.book.title = $event),\n    placeholder: \"Título\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.book.title]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.book.author = $event),\n    placeholder: \"Autor\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.book.author]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.book.year = $event),\n    placeholder: \"Ano\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.book.year]]), _createElementVNode(\"button\", _hoisted_1, _toDisplayString($data.book.id ? 'Atualizar' : 'Adicionar'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_createElementVNode","$event","$data","book","title","placeholder","required","author","year","_hoisted_1","_toDisplayString","id"],"sources":["C:\\Users\\DSADM\\Desktop\\Bliot.Mange\\library-frontend\\src\\components\\BookForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <input v-model=\"book.title\" placeholder=\"Título\" required />\r\n      <input v-model=\"book.author\" placeholder=\"Autor\" required />\r\n      <input v-model=\"book.year\" placeholder=\"Ano\" required />\r\n      <button type=\"submit\">{{ book.id ? 'Atualizar' : 'Adicionar' }}</button>\r\n    </form>\r\n  </template>\r\n   \r\n  <script>\r\n  import api from '../services/api'; // Importa o serviço API para fazer requisições\r\n   \r\n  export default {\r\n    props: ['bookToEdit'], // Recebe o livro a ser editado como uma prop\r\n    data() {\r\n      return {\r\n        book: this.bookToEdit || { title: '', author: '', year: null } // Inicializa o objeto livro\r\n      };\r\n    },\r\n    methods: {\r\n      // Função para enviar o formulário\r\n      handleSubmit() {\r\n        if (this.book.id) {\r\n          api.updateBook(this.book.id, this.book).then(() => {\r\n            this.$emit('book-updated'); // Emite um evento quando o livro é atualizado\r\n          });\r\n        } else {\r\n          api.addBook(this.book).then(() => {\r\n            this.$emit('book-added'); // Emite um evento quando um novo livro é adicionado\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":";;EAKcA,IAAI,EAAC;AAAQ;;uBAJvBC,mBAAA,CAKO;IALAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADjBC,cAAA,KAAAC,IAAA,KAC2BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBACjCG,mBAAA,CAA4D;IAFlE,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAEsBC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAH,MAAA;IAAEI,WAAW,EAAC,QAAQ;IAACC,QAAQ,EAAR;iDAAjCJ,KAAA,CAAAC,IAAI,CAACC,KAAK,E,mBAC1BJ,mBAAA,CAA4D;IAHlE,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAGsBC,KAAA,CAAAC,IAAI,CAACI,MAAM,GAAAN,MAAA;IAAEI,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAAjCJ,KAAA,CAAAC,IAAI,CAACI,MAAM,E,mBAC3BP,mBAAA,CAAwD;IAJ9D,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIsBC,KAAA,CAAAC,IAAI,CAACK,IAAI,GAAAP,MAAA;IAAEI,WAAW,EAAC,KAAK;IAACC,QAAQ,EAAR;iDAA7BJ,KAAA,CAAAC,IAAI,CAACK,IAAI,E,GACzBR,mBAAA,CAAwE,UAAxES,UAAwE,EAAAC,gBAAA,CAA/CR,KAAA,CAAAC,IAAI,CAACQ,EAAE,6C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}