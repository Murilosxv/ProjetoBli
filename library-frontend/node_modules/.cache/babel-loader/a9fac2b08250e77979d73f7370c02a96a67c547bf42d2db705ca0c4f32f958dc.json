{"ast":null,"code":"import api from '../services/api'; // Importa o serviço API\n\nexport default {\n  data() {\n    return {\n      books: [] // Estado local da lista de livros\n    };\n  },\n  methods: {\n    fetchBooks() {\n      // Busca os livros do back-end\n      api.getBooks().then(response => {\n        this.books = response.data; // Atualiza a lista de livros\n      });\n    },\n    deleteBook(id) {\n      // Exclui um livro pelo ID\n      api.deleteBook(id).then(() => {\n        this.fetchBooks(); // Atualiza a lista após a exclusão\n      });\n    },\n    editBook(book) {\n      // Emite um evento para editar um livro\n      this.$emit('edit-book', book);\n    }\n  },\n  mounted() {\n    this.fetchBooks(); // Busca os livros ao montar o componente\n  }\n};","map":{"version":3,"names":["api","data","books","methods","fetchBooks","getBooks","then","response","deleteBook","id","editBook","book","$emit","mounted"],"sources":["C:\\Users\\DSADM\\Desktop\\Bliot.Mange\\library-frontend\\src\\components\\BookList.vue"],"sourcesContent":["<template>\r\n    <div class=\"booklist-container\">\r\n      <h1>Lista de Livros</h1>\r\n      <ul class=\"book-list\">\r\n        <li v-for=\"book in books\" :key=\"book.id\" class=\"book-item\">\r\n          <span class=\"book-title\">{{ book.title }} - {{ book.author }} ({{ book.year }})</span>\r\n          <div class=\"button-group\">\r\n            <button @click=\"editBook(book)\" class=\"edit-button\">Editar</button>\r\n            <button @click=\"deleteBook(book._id)\" class=\"delete-button\">Excluir</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n   \r\n  <script>\r\n  import api from '../services/api'; // Importa o serviço API\r\n   \r\n  export default {\r\n    data() {\r\n      return {\r\n        books: [], // Estado local da lista de livros\r\n      };\r\n    },\r\n    methods: {\r\n      fetchBooks() { // Busca os livros do back-end\r\n        api.getBooks().then(response => {\r\n          this.books = response.data; // Atualiza a lista de livros\r\n        });\r\n      },\r\n      deleteBook(id) { // Exclui um livro pelo ID\r\n        api.deleteBook(id).then(() => {\r\n          this.fetchBooks(); // Atualiza a lista após a exclusão\r\n        });\r\n      },\r\n      editBook(book) { // Emite um evento para editar um livro\r\n        this.$emit('edit-book', book);\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchBooks(); // Busca os livros ao montar o componente\r\n    },\r\n  };\r\n  </script>"],"mappings":"AAgBE,OAAOA,GAAE,MAAO,iBAAiB,EAAE;;AAEnC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MAAE;MACbJ,GAAG,CAACK,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QAC9B,IAAI,CAACL,KAAI,GAAIK,QAAQ,CAACN,IAAI,EAAE;MAC9B,CAAC,CAAC;IACJ,CAAC;IACDO,UAAUA,CAACC,EAAE,EAAE;MAAE;MACfT,GAAG,CAACQ,UAAU,CAACC,EAAE,CAAC,CAACH,IAAI,CAAC,MAAM;QAC5B,IAAI,CAACF,UAAU,CAAC,CAAC,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC;IACDM,QAAQA,CAACC,IAAI,EAAE;MAAE;MACf,IAAI,CAACC,KAAK,CAAC,WAAW,EAAED,IAAI,CAAC;IAC/B;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,UAAU,CAAC,CAAC,EAAE;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}