{"ast":null,"code":"import api from '../services/api'; // Importa o serviço API para fazer requisições\n\nexport default {\n  props: ['bookToEdit'],\n  // Recebe o livro a ser editado como uma prop\n  data() {\n    return {\n      book: this.bookToEdit || {\n        title: '',\n        author: '',\n        year: null\n      } // Inicializa o objeto livro\n    };\n  },\n  methods: {\n    // Função para enviar o formulário\n    handleSubmit() {\n      if (this.book.id) {\n        api.updateBook(this.book.id, this.book).then(() => {\n          this.$emit('book-updated'); // Emite um evento quando o livro é atualizado\n        });\n      } else {\n        api.addBook(this.book).then(() => {\n          this.$emit('book-added'); // Emite um evento quando um novo livro é adicionado\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","props","data","book","bookToEdit","title","author","year","methods","handleSubmit","id","updateBook","then","$emit","addBook"],"sources":["C:\\Users\\DSADM\\Desktop\\Bliot.Mange\\library-frontend\\src\\components\\BookForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <input v-model=\"book.title\" placeholder=\"Título\" required />\r\n      <input v-model=\"book.author\" placeholder=\"Autor\" required />\r\n      <input v-model=\"book.year\" placeholder=\"Ano\" required />\r\n      <button type=\"submit\">{{ book.id ? 'Atualizar' : 'Adicionar' }}</button>\r\n    </form>\r\n  </template>\r\n   \r\n  <script>\r\n  import api from '../services/api'; // Importa o serviço API para fazer requisições\r\n   \r\n  export default {\r\n    props: ['bookToEdit'], // Recebe o livro a ser editado como uma prop\r\n    data() {\r\n      return {\r\n        book: this.bookToEdit || { title: '', author: '', year: null } // Inicializa o objeto livro\r\n      };\r\n    },\r\n    methods: {\r\n      // Função para enviar o formulário\r\n      handleSubmit() {\r\n        if (this.book.id) {\r\n          api.updateBook(this.book.id, this.book).then(() => {\r\n            this.$emit('book-updated'); // Emite um evento quando o livro é atualizado\r\n          });\r\n        } else {\r\n          api.addBook(this.book).then(() => {\r\n            this.$emit('book-added'); // Emite um evento quando um novo livro é adicionado\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":"AAUE,OAAOA,GAAE,MAAO,iBAAiB,EAAE;;AAEnC,eAAe;EACbC,KAAK,EAAE,CAAC,YAAY,CAAC;EAAE;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI,CAACC,UAAS,IAAK;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAK,EAAE;IACjE,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACN,IAAI,CAACO,EAAE,EAAE;QAChBV,GAAG,CAACW,UAAU,CAAC,IAAI,CAACR,IAAI,CAACO,EAAE,EAAE,IAAI,CAACP,IAAI,CAAC,CAACS,IAAI,CAAC,MAAM;UACjD,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC,EAAE;QAC9B,CAAC,CAAC;MACJ,OAAO;QACLb,GAAG,CAACc,OAAO,CAAC,IAAI,CAACX,IAAI,CAAC,CAACS,IAAI,CAAC,MAAM;UAChC,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC,EAAE;QAC5B,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}