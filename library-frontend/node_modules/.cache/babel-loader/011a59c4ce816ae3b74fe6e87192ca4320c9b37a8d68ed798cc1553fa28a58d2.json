{"ast":null,"code":"import api from '@/services/api'; // Importa o serviço API para fazer requisições\n\nexport default {\n  props: ['bookToEdit'],\n  // Recebe o livro a ser editado como uma prop\n  data() {\n    return {\n      book: this.bookToEdit || {\n        title: '',\n        author: '',\n        year: null\n      } // Inicializa os dados do livro\n    };\n  },\n  watch: {\n    bookToEdit: {\n      immediate: true,\n      handler(newVal) {\n        this.book = newVal || {\n          title: '',\n          author: '',\n          year: null\n        }; // Atualiza os dados quando a prop mudar\n      }\n    }\n  },\n  methods: {\n    handleSubmit() {\n      if (this.book._id) {\n        api.updateBook(this.book._id, this.book).then(() => {\n          this.$emit('book-updated'); // Emite um evento quando o livro é atualizado\n        });\n      } else {\n        api.addBook(this.book).then(() => {\n          this.$emit('book-added'); // Emite um evento quando um novo livro é adicionado\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","props","data","book","bookToEdit","title","author","year","watch","immediate","handler","newVal","methods","handleSubmit","_id","updateBook","then","$emit","addBook"],"sources":["C:\\Users\\DSADM\\Desktop\\Bliot.Mange\\library-frontend\\src\\components\\BookForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"bookform-container\">\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <input v-model=\"book.title\" placeholder=\"Título\" required />\r\n      <input v-model=\"book.author\" placeholder=\"Autor\" required />\r\n      <input v-model=\"book.year\" placeholder=\"Ano\" required />\r\n      <button type=\"submit\">{{ book._id ? 'Atualizar' : 'Adicionar' }}</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n \r\n<script>\r\nimport api from '@/services/api'; // Importa o serviço API para fazer requisições\r\n \r\nexport default {\r\n  props: ['bookToEdit'], // Recebe o livro a ser editado como uma prop\r\n  data() {\r\n    return {\r\n      book: this.bookToEdit || { title: '', author: '', year: null }, // Inicializa os dados do livro\r\n    };\r\n  },\r\n  watch: {\r\n    bookToEdit: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        this.book = newVal || { title: '', author: '', year: null }; // Atualiza os dados quando a prop mudar\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      if (this.book._id) {\r\n        api.updateBook(this.book._id, this.book).then(() => {\r\n          this.$emit('book-updated'); // Emite um evento quando o livro é atualizado\r\n        });\r\n      } else {\r\n        api.addBook(this.book).then(() => {\r\n          this.$emit('book-added'); // Emite um evento quando um novo livro é adicionado\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AAYA,OAAOA,GAAE,MAAO,gBAAgB,EAAE;;AAElC,eAAe;EACbC,KAAK,EAAE,CAAC,YAAY,CAAC;EAAE;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI,CAACC,UAAS,IAAK;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAE;IAClE,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLJ,UAAU,EAAE;MACVK,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACR,IAAG,GAAIQ,MAAK,IAAK;UAAEN,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAK,CAAC,EAAE;MAC/D;IACF;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACV,IAAI,CAACW,GAAG,EAAE;QACjBd,GAAG,CAACe,UAAU,CAAC,IAAI,CAACZ,IAAI,CAACW,GAAG,EAAE,IAAI,CAACX,IAAI,CAAC,CAACa,IAAI,CAAC,MAAM;UAClD,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC,EAAE;QAC9B,CAAC,CAAC;MACJ,OAAO;QACLjB,GAAG,CAACkB,OAAO,CAAC,IAAI,CAACf,IAAI,CAAC,CAACa,IAAI,CAAC,MAAM;UAChC,IAAI,CAACC,KAAK,CAAC,YAAY,CAAC,EAAE;QAC5B,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}