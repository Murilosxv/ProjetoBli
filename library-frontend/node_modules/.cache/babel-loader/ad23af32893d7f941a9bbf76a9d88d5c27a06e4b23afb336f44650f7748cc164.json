{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BookForm = _resolveComponent(\"BookForm\");\n  const _component_BookList = _resolveComponent(\"BookList\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Formulário para adicionar ou editar um livro \"), _createVNode(_component_BookForm, {\n    bookToEdit: $data.bookToEdit,\n    onBookAdded: $options.fetchBooks,\n    onBookUpdated: $options.fetchBooks\n  }, null, 8 /* PROPS */, [\"bookToEdit\", \"onBookAdded\", \"onBookUpdated\"]), _createCommentVNode(\" Lista de livros \"), _createVNode(_component_BookList, {\n    onEditBook: $options.setBookToEdit,\n    ref: \"bookList\"\n  }, null, 8 /* PROPS */, [\"onEditBook\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_BookForm","bookToEdit","$data","onBookAdded","$options","fetchBooks","onBookUpdated","_component_BookList","onEditBook","setBookToEdit","ref"],"sources":["C:\\Users\\DSADM\\Desktop\\Bliot.Mange\\library-frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n  <!-- Formulário para adicionar ou editar um livro -->\n  <BookForm :bookToEdit=\"bookToEdit\" @book-added=\"fetchBooks\" @book-updated=\"fetchBooks\" />\n  <!-- Lista de livros -->\n  <BookList @edit-book=\"setBookToEdit\" ref=\"bookList\" />\n  </div>\n</template>\n \n<script>\n  import BookList from './components/BookList.vue';\n  import BookForm from './components/BookForm.vue';\n \n  export default {\n    data() {\n      return {\n          bookToEdit: null, // Inicializa o estado do livro a ser editado\n      };\n    },\n \n    components: {\n      BookList,\n      BookForm,\n    },    \n \n    methods: {\n      // Função para definir o livro que será editado\n      setBookToEdit(book) {\n        this.bookToEdit = book;\n      },\n \n      // Função para atualizar a lista de livros após adicionar ou editar\n      fetchBooks() {\n        this.$refs.bookList.fetchBooks();\n        this.bookToEdit = null; // Limpa o formulário após a ação\n      },\n    },\n  };\n</script>\ntem menu de contexto\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAKM,OALNC,UAKM,GAJNC,mBAAA,kDAAqD,EACrDC,YAAA,CAAyFC,mBAAA;IAA9EC,UAAU,EAAEC,KAAA,CAAAD,UAAU;IAAGE,WAAU,EAAEC,QAAA,CAAAC,UAAU;IAAGC,aAAY,EAAEF,QAAA,CAAAC;2EAC3EP,mBAAA,qBAAwB,EACxBC,YAAA,CAAsDQ,mBAAA;IAA3CC,UAAS,EAAEJ,QAAA,CAAAK,aAAa;IAAEC,GAAG,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}